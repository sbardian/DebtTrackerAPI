{"version":3,"sources":["../../src/server/apiRoutes.js"],"names":["express","require","routesLogic","router","Router","route","post","req","res","addCreditCard","get","next","getAllCreditCards","getCreditCardByID","put","putOrUpdate","delete","deleteCreditCard","addTotal","getTotals","deleteTotal"],"mappings":";;;;;AAAA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,MAAMC,cAAcD,QAAQ,eAAR,CAApB;;AAEA,MAAME,SAASH,QAAQI,MAAR,EAAf;;AAEA;;;AAGAD,OAAOE,KAAP,CAAa,cAAb,EACKC,IADL,CACU,CAACC,GAAD,EAAMC,GAAN,KAAcN,YAAYO,aAAZ,CAA0BF,GAA1B,EAA+BC,GAA/B,CADxB,EAEKE,GAFL,CAES,CAACH,GAAD,EAAMC,GAAN,EAAWG,IAAX,KAAoBT,YAAYU,iBAAZ,CAA8BL,GAA9B,EAAmCC,GAAnC,EAAwCG,IAAxC,CAF7B;;AAIA;;;AAGAR,OAAOE,KAAP,CAAa,kBAAb,EACKK,GADL,CACS,CAACH,GAAD,EAAMC,GAAN,KAAcN,YAAYW,iBAAZ,CAA8BN,GAA9B,EAAmCC,GAAnC,CADvB,EAEKM,GAFL,CAES,CAACP,GAAD,EAAMC,GAAN,KAAcN,YAAYa,WAAZ,CAAwBR,GAAxB,EAA6BC,GAA7B,CAFvB,EAGKQ,MAHL,CAGY,CAACT,GAAD,EAAMC,GAAN,KAAcN,YAAYe,gBAAZ,CAA6BV,GAA7B,EAAkCC,GAAlC,CAH1B;;AAKA;;;AAGAL,OAAOE,KAAP,CAAa,SAAb,EACKC,IADL,CACU,CAACC,GAAD,EAAMC,GAAN,KAAcN,YAAYgB,QAAZ,CAAqBX,GAArB,EAA0BC,GAA1B,CADxB,EAEKE,GAFL,CAES,CAACH,GAAD,EAAMC,GAAN,KAAcN,YAAYiB,SAAZ,CAAsBZ,GAAtB,EAA2BC,GAA3B,CAFvB;;AAIA;;;AAGAL,OAAOE,KAAP,CAAa,aAAb,EACKW,MADL,CACY,CAACT,GAAD,EAAMC,GAAN,KAAcN,YAAYkB,WAAZ,CAAwBb,GAAxB,EAA6BC,GAA7B,CAD1B;;AAGA;;;AAGA;;;;;;;;kBAQeL,M","file":"apiRoutes.js","sourcesContent":["const express = require('express');\nconst routesLogic = require('./routesLogic');\n\nconst router = express.Router();\n\n/**\n * routes ending in '/creditcards'\n */\nrouter.route('/creditcards')\n    .post((req, res) => routesLogic.addCreditCard(req, res))\n    .get((req, res, next) => routesLogic.getAllCreditCards(req, res, next));\n\n/**\n * routes ending in '/creditcards/id'\n */\nrouter.route('/creditcards/:id')\n    .get((req, res) => routesLogic.getCreditCardByID(req, res))\n    .put((req, res) => routesLogic.putOrUpdate(req, res))\n    .delete((req, res) => routesLogic.deleteCreditCard(req, res));\n\n/**\n * routes ending in '/totals'\n */\nrouter.route('/totals')\n    .post((req, res) => routesLogic.addTotal(req, res))\n    .get((req, res) => routesLogic.getTotals(req, res));\n\n/**\n * routes ending in '/totals/id\n */\nrouter.route('/totals/:id')\n    .delete((req, res) => routesLogic.deleteTotal(req, res));\n\n/**\n * route ending in '/'\n */\n/*\nrouter.get('/', (req, res, next) => {\n  let err = new Error();\n  err.status = 400;\n  return next(err);\n});\n*/\n\nexport default router;\n"]}