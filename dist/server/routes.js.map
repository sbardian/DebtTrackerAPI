{"version":3,"sources":["../../src/server/routes.js"],"names":["routesLogic","require","routes","setRoutes","router","get","req","res","next","err","Error","status","post","login","route","register","logout","addCreditCard","getAllCreditCards","getCreditCardByID","put","putOrUpdate","delete","deleteCreditCard","addTotal","getTotals","deleteTotal","module","exports"],"mappings":";;AAAA;;;;AAIA,MAAMA,cAAcC,QAAQ,eAAR,CAApB;;AAEA,MAAMC,SAAS;AACbC,YAAUC,MAAV,EAAkB;AAChB;;;AAGAA,WAAOC,GAAP,CAAW,GAAX,EAAgB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClC,UAAIC,MAAM,IAAIC,KAAJ,EAAV;AACAD,UAAIE,MAAJ,GAAa,GAAb;AACA,aAAOH,KAAKC,GAAL,CAAP;AACD,KAJD;;AAMA;;;AAGAL,WAAOQ,IAAP,CAAY,QAAZ,EAAsBZ,YAAYa,KAAlC;;AAEA;;;AAGAT,WAAOU,KAAP,CAAa,WAAb,EACKF,IADL,CACU,CAACN,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoBR,YAAYe,QAAZ,CAAqBT,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,CAD9B;;AAGA;;;AAGAJ,WAAOU,KAAP,CAAa,SAAb,EACKT,GADL,CACS,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoBR,YAAYgB,MAAZ,CAAmBV,GAAnB,EAAwBC,GAAxB,EAA6BC,IAA7B,CAD7B;;AAGA;;;AAGAJ,WAAOU,KAAP,CAAa,cAAb,EACKF,IADL,CACU,CAACN,GAAD,EAAMC,GAAN,KAAcP,YAAYiB,aAAZ,CAA0BX,GAA1B,EAA+BC,GAA/B,CADxB,EAEKF,GAFL,CAES,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoBR,YAAYkB,iBAAZ,CAA8BZ,GAA9B,EAAmCC,GAAnC,EAAwCC,IAAxC,CAF7B;;AAIA;;;AAGAJ,WAAOU,KAAP,CAAa,kBAAb,EACKT,GADL,CACS,CAACC,GAAD,EAAMC,GAAN,KAAcP,YAAYmB,iBAAZ,CAA8Bb,GAA9B,EAAmCC,GAAnC,CADvB,EAEKa,GAFL,CAES,CAACd,GAAD,EAAMC,GAAN,KAAcP,YAAYqB,WAAZ,CAAwBf,GAAxB,EAA6BC,GAA7B,CAFvB,EAGKe,MAHL,CAGY,CAAChB,GAAD,EAAMC,GAAN,KAAcP,YAAYuB,gBAAZ,CAA6BjB,GAA7B,EAAkCC,GAAlC,CAH1B;;AAKA;;;AAGAH,WAAOU,KAAP,CAAa,SAAb,EACKF,IADL,CACU,CAACN,GAAD,EAAMC,GAAN,KAAcP,YAAYwB,QAAZ,CAAqBlB,GAArB,EAA0BC,GAA1B,CADxB,EAEKF,GAFL,CAES,CAACC,GAAD,EAAMC,GAAN,KAAcP,YAAYyB,SAAZ,CAAsBnB,GAAtB,EAA2BC,GAA3B,CAFvB;;AAIA;;;AAGAH,WAAOU,KAAP,CAAa,aAAb,EACKQ,MADL,CACY,CAAChB,GAAD,EAAMC,GAAN,KAAcP,YAAY0B,WAAZ,CAAwBpB,GAAxB,EAA6BC,GAA7B,CAD1B;AAED;AAvDY,CAAf;;AA0DAoB,OAAOC,OAAP,GAAiB1B,MAAjB","file":"routes.js","sourcesContent":["/**\n * Created by sbardian on 12/13/16.\n */\n\nconst routesLogic = require('./routesLogic');\n\nconst routes = {\n  setRoutes(router) {\n    /**\n     * route ending in '/'\n     */\n    router.get('/', (req, res, next) => {\n      let err = new Error();\n      err.status = 400;\n      return next(err);\n    });\n\n    /**\n     * route ending in '/login'\n     */\n    router.post('/login', routesLogic.login);\n\n    /**\n     * route ending in '/register'\n     */\n    router.route('/register')\n        .post((req, res, next) => routesLogic.register(req, res, next));\n\n    /**\n     * route ending in '/logout'\n     */\n    router.route('/logout')\n        .get((req, res, next) => routesLogic.logout(req, res, next));\n\n    /**\n     * routes ending in '/creditcards'\n     */\n    router.route('/creditcards')\n        .post((req, res) => routesLogic.addCreditCard(req, res))\n        .get((req, res, next) => routesLogic.getAllCreditCards(req, res, next));\n\n    /**\n     * routes ending in '/creditcards/id'\n     */\n    router.route('/creditcards/:id')\n        .get((req, res) => routesLogic.getCreditCardByID(req, res))\n        .put((req, res) => routesLogic.putOrUpdate(req, res))\n        .delete((req, res) => routesLogic.deleteCreditCard(req, res));\n\n    /**\n     * routes ending in '/totals'\n     */\n    router.route('/totals')\n        .post((req, res) => routesLogic.addTotal(req, res))\n        .get((req, res) => routesLogic.getTotals(req, res));\n\n    /**\n     * routes ending in '/totals/id\n     */\n    router.route('/totals/:id')\n        .delete((req, res) => routesLogic.deleteTotal(req, res));\n  },\n};\n\nmodule.exports = routes;\n"]}